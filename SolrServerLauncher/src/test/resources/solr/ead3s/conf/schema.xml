<?xml version="1.0" encoding="UTF-8"?>
<schema name="example" version="1.2">
  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
	  <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/> 
      <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/> 
    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime    
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
                      
         Consult the DateField javadocs for more information.

           Note: For faster range queries, consider the tdate type
        -->
        <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>

        <!-- A Trie based date field for faster date range queries and date faceting. -->
        <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>

        <!-- boolean type: "true" or "false" -->
        <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>	
	
        <!-- A general unstemmed text field - good if one does not know the language of the field -->
        <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0" splitOnNumerics="0"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0" splitOnNumerics="0"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>  
        <fieldType name="languageText" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            </analyzer>
        </fieldType> 
        <fieldType name="unitidType" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>     
        <fieldType name="sorting" class="solr.TextField" sortMissingLast="true" omitNorms="true">
            <analyzer>
                <!-- KeywordTokenizer does no actual tokenizing, so the entire
                   input string is preserved as a single token
                -->
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <!-- The LowerCase TokenFilter does what you expect, which can be
                   when you want your sorting to be case insensitive
                -->
                <filter class="solr.LowerCaseFilterFactory"/>
                <!-- The TrimFilter removes any leading or trailing whitespace -->
                <filter class="solr.TrimFilterFactory"/>
                <filter class="solr.PatternReplaceFilterFactory" pattern="[\&quot;']" replacement="" replace="all"/>
            </analyzer>
        </fieldType>		

        <!-- Setup simple analysis for spell checking-->
     
        <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100" >
            <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LengthFilterFactory" min="3" max="100" />
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>

    </types>
    <fields>
        <field name="id" type="string" indexed="true" stored="true" required="true"/>	
        <!--<field name="eadId" type="string" indexed="true" stored="true" required="true"/>-->
        <field name="rootDocId" type="string" indexed="true" stored="true" required="false"/>
        <!-- Fields that are used for search and highlighted
        According to http://wiki.apache.org/solr/FieldOptionsByUseCase
        fields with highlighting has termVectors, termPositions, termOffsets
        -->
        <field name="unitTitle" type="text" indexed="true" stored="true" required="false" termVectors="true" termPositions="true" termOffsets="true" />
        <field name="scopeContent" type="text" indexed="true" stored="true" required="false" termVectors="true" termPositions="true" termOffsets="true" />	
        <field name="other" type="text" indexed="true" stored="true" required="false" termVectors="true" termPositions="true" termOffsets="true" />
        <field name="unitDate" type="text" indexed="true" stored="true" required="false" termVectors="true" termPositions="true" termOffsets="true" />
        <!-- Fields that are used for sorting
        According to http://wiki.apache.org/solr/FieldOptionsByUseCase
        fields used for sorting, it is recommended to use omitNorms
        -->

        <field name="unitId" type="unitidType" indexed="true" stored="true" required="false"/>
        <field name="otherUnitId" type="unitidType" indexed="true" stored="true" required="false" multiValued="true"/>
        <field name="titleProper" type="string" indexed="true" stored="true" required="false"/>
        <field name="country" type="string" indexed="true" stored="true" required="false"/>
        <field name="countryId" type="int" indexed="true" stored="false" required="false"/>
        <field name="countryName" type="string" indexed="true" stored="true" required="false"/>
        <field name="ai" type="string" indexed="true" stored="true" required="false"/>
        <field name="aiId" type="int" indexed="true" stored="false" required="false"/>
        <field name="aiName" type="string" indexed="true" stored="true" required="false"/>
        <field name="repositoryCode" type="unitidType" indexed="true" stored="true" required="false"/>
        <field name="numberOfDescendents" type="string" indexed="false" stored="true" required="false"/>
        <field name="numberOfAncestors" type="string" indexed="false" stored="true" required="false"/>
	    
	  	
  
        <field name="levelName" type="string" indexed="true" stored="true" required="false"/>
        <field name="startDate" type="date" indexed="true" stored="true" required="false"/>
        <field name="endDate" type="date" indexed="true" stored="true" required="false"/>
        <field name="dateType" type="string" indexed="true" stored="true" required="false"/>
	  
        <field name="language" type="string" indexed="true" stored="true" required="false"/>
        <field name="langMaterial" type="languageText" indexed="true" stored="true" required="false"/>
        <field name="recordId" type="string" indexed="true" stored="true" required="false"/>	
        <!--This is recommended as parentUnitId, but need to rethink cause it refers the root of a document-->  
        <field name="recordType" type="string" indexed="true" stored="true" required="false"/>	
        
        <field name="duplicateUnitid" type="boolean" indexed="true" stored="true" required="false"/>	  
        <field name="dao" type="boolean" indexed="true" stored="true" required="false"/>
        <field name="numberOfDao" type="string" indexed="false" stored="true" required="false"/>
        <field name="daoLinks" type="string" indexed="false" stored="true" multiValued="true" required="false"/>
        <field name="daoType" type="string" indexed="true" stored="true" multiValued="true" required="false"/>
        <field name="topic" type="string" indexed="true" stored="true" multiValued="true" required="false"/>
        <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
	 
        <field name="parentId" type="string" indexed="true" stored="true" required="false"/>
        <field name="parentUnitId" type="string" indexed="true" stored="true" required="false"/>
        <!--<field name="leaf" type="boolean" indexed="true" stored="true" required="false"/>-->
        <field name="openData" type="boolean" indexed="true" stored="true" required="false" default="false"/>
        <field name="spell" type="textSpell" indexed="true" stored="true" multiValued="true" termVectors="true" termPositions="true" termOffsets="true" />
        <field name="openDataSpell" type="textSpell" indexed="true" stored="true" multiValued="true" termVectors="true" termPositions="true" termOffsets="true" required="false"/>
        <field name="siblingPosition" type="int" indexed="false" stored="true" required="false"/>
        
        <field name="unitIdSort" type="sorting" indexed="true" stored="false" required="false" omitNorms="true"/>	
        <field name="unitTitleSort" type="sorting" indexed="true" stored="false" required="false" omitNorms="true"/> 	
        <field name="unitRecordIDSort" type="sorting" indexed="true" stored="false" required="false" omitNorms="true"/>   

        <!--<field name="depth" type="int" indexed="true" stored="true" required="false"/>-->
        <dynamicField name="*_i"  type="int"    indexed="true"  stored="true"/>
        <dynamicField name="*_s"  type="string"  indexed="true"  stored="true"/>

    </fields>
    <uniqueKey>id</uniqueKey> 
    <!--<defaultSearchField>unitTitle</defaultSearchField>--> 
    <!--<solrQueryParser defaultOperator="AND"/>--> 
  
   
    <copyField source="unitTitle" dest="spell"/>
    <copyField source="scopeContent" dest="spell"/>  
    <copyField source="other" dest="spell"/>  
    <copyField source="unitDate" dest="spell"/>

    <copyField source="recordId" dest="unitRecordIDSort"/>
    <copyField source="unitTitle" dest="unitTitleSort"/>
    <copyField source="unitId" dest="unitIdSort"/>
</schema>
