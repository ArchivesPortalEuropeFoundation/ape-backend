package eu.apenet.persistence.vo;

// Generated 04-feb-2014 17:50:26 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EacCpf generated by hbm2java
 */
@Entity
@Table(name = "eac_cpf", schema = "public")
public class EacCpf implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6760184769676870729L;
	private int id;
	private ArchivalInstitution archivalInstitution;
	private UploadMethod uploadMethod;
	private String nameEntry;
	private Date uploadDate;
	private String pathCpf;
	private Boolean published = false;
	private Boolean converted = false;
	private ValidatedState validated = ValidatedState.NOT_VALIDATED;
	private EuropeanaState europeana = EuropeanaState.NOT_CONVERTED;
	private QueuingState queuing = QueuingState.NO;
	private Date publishDate;
	private String cpfId;
	private Set<CpfContent> cpfContents = new HashSet<CpfContent>(0);

	public EacCpf() {
	}

	public EacCpf(int id, ArchivalInstitution archivalInstitution,
			UploadMethod uploadMethod, String nameEntry, Date uploadDate,
			String pathCpf) {
		this.id = id;
		this.archivalInstitution = archivalInstitution;
		this.uploadMethod = uploadMethod;
		this.nameEntry = nameEntry;
		this.uploadDate = uploadDate;
		this.pathCpf = pathCpf;
	}

	public EacCpf(int id, ArchivalInstitution archivalInstitution,
			UploadMethod uploadMethod, String nameEntry, Date uploadDate,
			String pathCpf, Boolean published, Boolean converted,
			ValidatedState validated, EuropeanaState europeana, QueuingState queuing, Date publishDate,
			Set<CpfContent> cpfContents) {
		this.id = id;
		this.archivalInstitution = archivalInstitution;
		this.uploadMethod = uploadMethod;
		this.nameEntry = nameEntry;
		this.uploadDate = uploadDate;
		this.pathCpf = pathCpf;
		this.published = published;
		this.converted = converted;
		this.validated = validated;
		this.europeana = europeana;
		this.queuing = queuing;
		this.publishDate = publishDate;
		this.cpfContents = cpfContents;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ai_id", nullable = false)
	public ArchivalInstitution getArchivalInstitution() {
		return this.archivalInstitution;
	}

	public void setArchivalInstitution(ArchivalInstitution archivalInstitution) {
		this.archivalInstitution = archivalInstitution;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "um_id", nullable = false)
	public UploadMethod getUploadMethod() {
		return this.uploadMethod;
	}

	public void setUploadMethod(UploadMethod uploadMethod) {
		this.uploadMethod = uploadMethod;
	}

	@Column(name = "name_entry", nullable = false)
	public String getNameEntry() {
		return this.nameEntry;
	}

	public void setNameEntry(String nameEntry) {
		this.nameEntry = nameEntry;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upload_date", nullable = false, length = 29)
	public Date getUploadDate() {
		return this.uploadDate;
	}

	public void setUploadDate(Date uploadDate) {
		this.uploadDate = uploadDate;
	}

	@Column(name = "path_cpf", nullable = false)
	public String getPathCpf() {
		return this.pathCpf;
	}

	public void setPathCpf(String pathCpf) {
		this.pathCpf = pathCpf;
	}

	@Column(name = "published")
	public Boolean getPublished() {
		return this.published;
	}

	public void setPublished(Boolean published) {
		this.published = published;
	}

	@Column(name = "converted")
	public Boolean getConverted() {
		return this.converted;
	}

	public void setConverted(Boolean converted) {
		this.converted = converted;
	}

	@Column(name = "validated")
	public ValidatedState getValidated() {
		return this.validated;
	}

	public void setValidated(ValidatedState validated) {
		this.validated = validated;
	}

	@Column(name = "europeana")
	public EuropeanaState getEuropeana() {
		return this.europeana;
	}

	public void setEuropeana(EuropeanaState europeana) {
		this.europeana = europeana;
	}

	@Column(name = "queuing")
	public QueuingState getQueuing() {
		return this.queuing;
	}

	public void setQueuing(QueuingState queuing) {
		this.queuing = queuing;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "publish_date", length = 29)
	public Date getPublishDate() {
		return this.publishDate;
	}

	public void setPublishDate(Date publishDate) {
		this.publishDate = publishDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eacCpf")
	public Set<CpfContent> getCpfContents() {
		return this.cpfContents;
	}

	public void setCpfContents(Set<CpfContent> cpfContents) {
		this.cpfContents = cpfContents;
	}
	
	@Column(name = "cpf_id", nullable = false)
	public String getCpfId() {
		return cpfId;
	}

	public void setCpfId(String cpfId) {
		this.cpfId = cpfId;
	}

}
